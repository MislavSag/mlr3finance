% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpFilterRegrTarget.R
\name{mlr_pipeops_filterregrtarget}
\alias{mlr_pipeops_filterregrtarget}
\alias{PipeOpFilterRegrTarget}
\title{Filter Rows Based on Extreme Target Values}
\description{
This PipeOp filters the training set for a regression task by retaining only those observations
with target values that are extreme. The user can specify lower and upper percentile thresholds;
only rows with a target value less than or equal to the lower threshold or greater than or equal to
the upper threshold are retained. No filtering is applied during prediction.
}
\section{Parameters}{

The parameters are inherited from \code{\link[mlr3pipelines:PipeOpTaskPreproc]{PipeOpTaskPreproc}},
as well as the following additional parameters:
\itemize{
\item \code{lower_percentile} :: \code{numeric(1)}\cr
The quantile value for the lower threshold. Only rows with target values below (or equal to)
this value are kept. Default is \code{0.1} (10th percentile).
\item \code{upper_percentile} :: \code{numeric(1)}\cr
The quantile value for the upper threshold. Only rows with target values above (or equal to)
this value are kept. Default is \code{0.9} (90th percentile).
}
}

\section{Super classes}{
\code{\link[mlr3pipelines:PipeOp]{mlr3pipelines::PipeOp}} -> \code{\link[mlr3pipelines:PipeOpTaskPreproc]{mlr3pipelines::PipeOpTaskPreproc}} -> \code{PipeOpFilterRegrTarget}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PipeOpFilterRegrTarget-new}{\code{PipeOpFilterRegrTarget$new()}}
\item \href{#method-PipeOpFilterRegrTarget-clone}{\code{PipeOpFilterRegrTarget$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="help"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-help'><code>mlr3pipelines::PipeOp$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="predict"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-predict'><code>mlr3pipelines::PipeOp$predict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="print"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-print'><code>mlr3pipelines::PipeOp$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="train"><a href='../../mlr3pipelines/html/PipeOp.html#method-PipeOp-train'><code>mlr3pipelines::PipeOp$train()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PipeOpFilterRegrTarget-new"></a>}}
\if{latex}{\out{\hypertarget{method-PipeOpFilterRegrTarget-new}{}}}
\subsection{Method \code{new()}}{
Constructor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpFilterRegrTarget$new(id = "filter_target", param_vals = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
Identifier of the resulting object, default \code{"filter_target"}.}

\item{\code{param_vals}}{(named \code{list()})\cr
List of hyperparameter settings. Default is \code{list()}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PipeOpFilterRegrTarget-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PipeOpFilterRegrTarget-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpFilterRegrTarget$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
